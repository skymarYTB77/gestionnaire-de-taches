rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function isAuthenticated() {
      return request.auth != null;
    }

    function isOwner() {
      return request.auth.uid == resource.data.userId;
    }

    function isValidTask() {
      let incoming = request.resource.data;
      return incoming.title is string &&
             incoming.title.size() > 0 &&
             incoming.title.size() <= 100 &&
             incoming.dueDate is string &&
             incoming.column in ['today', 'thisWeek', 'thisMonth'] &&
             incoming.userId is string &&
             incoming.createdAt is timestamp &&
             incoming.updatedAt is timestamp;
    }

    match /tasks/{taskId} {
      allow read: if isAuthenticated() && isOwner();
      
      allow create: if isAuthenticated() && 
                   request.resource.data.userId == request.auth.uid &&
                   isValidTask();
      
      allow update: if isAuthenticated() && 
                   isOwner() &&
                   request.resource.data.userId == resource.data.userId &&
                   isValidTask();
      
      allow delete: if isAuthenticated() && isOwner();
    }
  }
}